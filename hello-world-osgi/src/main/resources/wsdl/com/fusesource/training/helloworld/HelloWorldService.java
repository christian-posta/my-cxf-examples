
/*
 * 
 */

package com.fusesource.training.helloworld;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Progress FUSE Services Framework 2.2.9-fuse-01-00
 * Wed Aug 25 15:08:13 EDT 2010
 * Generated source version: 2.2.9-fuse-01-00
 * 
 */


@WebServiceClient(name = "HelloWorldService", 
                  wsdlLocation = "file:HelloWorld.wsdl",
                  targetNamespace = "http://fusesource.com/training/HelloWorld") 
public class HelloWorldService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://fusesource.com/training/HelloWorld", "HelloWorldService");
    public final static QName SOAPOverHTTPEndpoint = new QName("http://fusesource.com/training/HelloWorld", "SOAPOverHTTPEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:HelloWorld.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:HelloWorld.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public HelloWorldService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloWorldService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWorldService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns HelloWorld
     */
    @WebEndpoint(name = "SOAPOverHTTPEndpoint")
    public HelloWorld getSOAPOverHTTPEndpoint() {
        return super.getPort(SOAPOverHTTPEndpoint, HelloWorld.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorld
     */
    @WebEndpoint(name = "SOAPOverHTTPEndpoint")
    public HelloWorld getSOAPOverHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(SOAPOverHTTPEndpoint, HelloWorld.class, features);
    }

}
